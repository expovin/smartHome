---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: api-tado
 labels:
  type: rest
  slot: smarthome
  app: api-tado
spec:
 replicas: 1
 selector:
  matchLabels:
   app: api-tado
 template:
  metadata:
   labels:
    app: api-tado
  spec:
   containers:
    - image: expovin/api.tado
      name: api-tado
      volumeMounts:
      - name: config
        mountPath: "/usr/src/app/secrets"
        readOnly: true                 
      ports: 
       - containerPort: 3000       
      env:
       - name :  PORT
         value: "3000"
       - name : TZ
         value: "Europe/Rome"
   volumes:
    - name: config
      secret:
       secretName: api-tado
---
apiVersion: v1
kind: Service
metadata:
  name: api-tado
spec:
  selector:
    app: api-tado
  ports:
    - protocol: TCP
      name : http
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: reverse.proxy
spec:
 replicas: 1
 selector:
  matchLabels:
   app: reverse-proxy
 template:
  metadata:
   labels:
    app: reverse-proxy
  spec:
   containers:
    - image : nginx:latest
      name: reverse-proxy
      ports:
       - name: nodejs-port
         containerPort: 80     
      env:
      - name: TZ
        value: "Europe/Rome"
      volumeMounts:
       - name : config-volumes
         mountPath: /etc/nginx
         readOnly: true
   volumes:
    - name : config-volumes
      configMap:
        name: nginx-config
        items:
         - key : nginx.conf
           path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: reverse-proxy
spec:
  selector:
    app: reverse-proxy
  type: NodePort
  ports:
    - name : http
      protocol: TCP
      port: 31080
      nodePort: 31080
      targetPort: nodejs-port
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: reverse-proxy
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    http:
      paths:
      - path: /service
        backend:
          serviceName: api-tado
          servicePort: 3000
      - path: /proxy
        backend:
          serviceName: reverse-proxy
          servicePort: 31080
---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: api-service
 labels:
  type: rest
  slot: smarthome
  app: api-service
spec:
 replicas: 1
 selector:
  matchLabels:
   app: api-service
 template:
  metadata:
   labels:
    app: api-service
  spec:
   containers:
    - image: expovin/api.services
      name: api-tado
      volumeMounts:
      - name: config
        mountPath: "/usr/src/app/secrets"
        readOnly: true                 
      ports: 
       - containerPort: 3200       
      env:
       - name :  PORT
         value: "3200"
       - name : TZ
         value: "Europe/Rome"
   volumes:
    - name: config
      secret:
       secretName: api-service
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: api-service
  ports:
    - protocol: TCP
      name : http
      port: 3200
      targetPort: 3200
